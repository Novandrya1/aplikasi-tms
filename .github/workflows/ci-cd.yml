name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tms_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.23

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'

    - name: Backend Tests
      run: |
        cd backend
        go mod download
        go test ./... -v
        go test -race -coverprofile=coverage.out ./...

    - name: Frontend Tests
      run: |
        cd frontend/aplikasi_tms
        flutter pub get
        flutter test

    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.out

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Backend
      uses: docker/build-push-action@v3
      with:
        context: ./backend
        file: ./backend/Dockerfile.prod
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/tms-backend:latest

    - name: Build and push Frontend
      uses: docker/build-push-action@v3
      with:
        context: ./frontend/aplikasi_tms
        file: ./frontend/aplikasi_tms/Dockerfile.prod
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/tms-frontend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Deploy to Production
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /opt/tms
          git pull origin main
          ./scripts/deploy.sh